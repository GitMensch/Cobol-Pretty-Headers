{
    "name": "cobolprettyheaders",
    "displayName": "Cobol Pretty Headers",
    "description": "Generate Pretty Headers for Cobol",
    "version": "0.0.1",
    "publisher": "Melissa",
    "engines": {
        "vscode": "^1.32.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onCommand:extension.generateHeaderCode"
    ],
    "main": "./out/extension",
    "contributes": {
        "configuration":[
            {
                "title": "Cobol Pretty Headers",
                "properties": {
                    "cobolprettyheaders.setHighestLevelNumber": {
                        "type":"string",
                        "default": "01",
                        "description": "Enter the highest level number you'd like for header field definitions."
                    },
                    "cobolprettyheaders.setLowestLevelNumber": {
                        "type": "string",
                        "default": "05",
                        "description": "Enter the lowest level number you'd like for the sub-fields in the header definition. Note that this must be lower than the highest level number."
                    },
                    "cobolprettyheaders.condensedHeaders": {
                        "type":"boolean",
                        "default": false,
                        "description": "Check to change header data fields to condensed, condensed data fields will store each full line of the header in a single data field instead of separate ones for each word and space."
                    },
                    "cobolprettyheaders.setPrintOutputField": {
                        "type":"string",
                        "default": "output",
                        "description": "Set the name of the output for the header write procedure, default is set to 'output'"
                    }
                }
            }
        ],
        "commands": [
            {
                "command": "extension.generateHeaderCode",
                "title": "Generate Header"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "lint": "eslint . --ext .ts,.tsx",
        "watch": "tsc -watch -p ./"
    },
    "devDependencies": {
        "@types/node": "^12.12.0",
        "@typescript-eslint/eslint-plugin": "^3.0.2",
        "@typescript-eslint/parser": "^3.0.2",
        "eslint": "^7.1.0",
        "typescript": "^4.0.2",
        "@types/vscode": "^1.32.0"
    }
}
